diff --git a/02-subtractFive/subtractFive.js b/02-subtractFive/subtractFive.js
index 41f2a9e..edaf13a 100644
--- a/02-subtractFive/subtractFive.js
+++ b/02-subtractFive/subtractFive.js
@@ -1,5 +1,5 @@
 function subtractFive(num) {
-  // Insert code here;
+  return num - 5;
 }
 
 // Do not edit this line;
diff --git a/02-subtractFive/subtractFive.test.js b/02-subtractFive/subtractFive.test.js
index 954c45b..77ec979 100644
--- a/02-subtractFive/subtractFive.test.js
+++ b/02-subtractFive/subtractFive.test.js
@@ -16,7 +16,7 @@ describe("the subtractFive(num) function", function() {
   })
 
   it("should pass auxillary test cases", function() {
-    let auxillaryTestCases = [20,40,60,80,99,105,221];
+    let auxillaryTestCases = [20,40,60,80,99,105,221,0,-5,-10,-66,2.2,5.5];
     let submittedSolution = subtractFive;
     expect(submittedSolution(auxillaryTestCases[0])).to.equal(15);
     expect(submittedSolution(auxillaryTestCases[1])).to.equal(35);
@@ -25,6 +25,12 @@ describe("the subtractFive(num) function", function() {
     expect(submittedSolution(auxillaryTestCases[4])).to.equal(94);
     expect(submittedSolution(auxillaryTestCases[5])).to.equal(100);
     expect(submittedSolution(auxillaryTestCases[6])).to.equal(216);
+    expect(submittedSolution(auxillaryTestCases[7])).to.equal(-5);
+    expect(submittedSolution(auxillaryTestCases[8])).to.equal(-10);
+    expect(submittedSolution(auxillaryTestCases[9])).to.equal(-15);
+    expect(submittedSolution(auxillaryTestCases[10])).to.equal(-71);
+    expect(submittedSolution(auxillaryTestCases[11])).to.equal(-2.8);
+    expect(submittedSolution(auxillaryTestCases[12])).to.equal(0.5);
   })
 
 })
\ No newline at end of file
