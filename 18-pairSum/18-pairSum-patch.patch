diff --git a/18-pairSum/pairSum.js b/18-pairSum/pairSum.js
index 15ad3a9..f47dcff 100644
--- a/18-pairSum/pairSum.js
+++ b/18-pairSum/pairSum.js
@@ -1,5 +1,26 @@
 function pairSum(nums, target) {
-  // Insert code here;
+  
+  // need at least two numbers to form a pair
+  if (nums.length <= 1) {
+    throw error("Unable to form a pair with given list of numbers");
+  }
+  
+  // holds the second number needed to reach the target value
+  let neededNums = new Set();  
+  
+  for (let i = 0; i < nums.length; i++) {
+    // searching for an item in a set is constant time
+    if (neededNums.has(nums[i])) {
+      return true;
+    } 
+
+    // add to the set, the number needed to pair 
+    // with the current number to reach the target
+    targetDiff = target - nums[i];
+    neededNums.add(targetDiff);
+  }
+  
+  return false;
 }
 
 // Do not edit this line;
diff --git a/18-pairSum/pairSum.test.js b/18-pairSum/pairSum.test.js
index 98baad2..e19cb4a 100644
--- a/18-pairSum/pairSum.test.js
+++ b/18-pairSum/pairSum.test.js
@@ -7,6 +7,8 @@ describe("the pairSum(nums, target) function", function() {
 
   it("should throw an error if the length of `nums` array is 1 or lower", function() {
     let submittedSolution = pairSum;
+    // assertions for throwing an error expect a function argument
+    // wrap the method call inside a function
     expect(function() { submittedSolution([], 9000) }).to.throw();
     expect(function() { submittedSolution([9], 9000) }).to.throw();
   })
